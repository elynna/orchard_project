<?xml version='1.0'?>
<%

def getPose(number, x_max, y_max, z_mean)
	if number < 2
		anchors = 1
	else
		anchors = rand(1..((number/2).round))
	end
	fruit_locations_ = Hash.new(0)
	for i in (0..number*3).step(3)
		fruit_locations_[[i,0]] = rand(x_max)
		fruit_locations_[[i,1]] = rand(y_max)
		fruit_locations_[[i,2]] = z_mean+rand(-0.2..0.2)
	end
	return fruit_locations_

end


crossbeam_w = 0.1
crossbeam_h = 0.02
crossbeam_m = 5
post_h = 1.8
wire_length = 0.5
trunk_height = 1.8
col_num = 4
row_num = 6
col_dist = 4.0
row_dist = 2.5
post_tree_dist = 0.2
# The number of wires between posts
wire_num = 3
fruit_num = 50
fruit_mean_z = 1.75
fruit_locations = getPose(fruit_num, (col_num-1)*col_dist, (row_num-1)*row_dist, fruit_mean_z)
#(0..array.length).step(2).each do |x|
#	this = array[x]
#end
counter = 0
if col_num < 1
	col_num = 1
end
if row_num < 1
	row_num = 1
end
if col_dist < 1
	col_dist = 1
end	
if row_dist < 0.5
	row_dist = 0.5
end	
%>

<sdf version='1.4'>
  <model name="pergola">
  <%
	(0..col_num*col_dist).step(col_dist).each do |x|
		(0..row_num*row_dist).step(row_dist).each do |y|
  %>
		<include>
			<name>post_<%= counter %></name>
			<pose><%= x %> <%= y %> 0 0 0 0</pose>
			<uri>model://post</uri>
		</include>	
		<% counter += 1
		end
    end %>
    
  <%
	counter = 0
	((col_dist/2)..(col_num-1)*col_dist+(col_dist/2)).step(col_dist).each do |x|
		(0..row_num*row_dist).step(row_dist).each do |y|
  %>
    <link name="beam_<%= counter %>">
      <pose><%= x %> <%= y %> <%= post_h+crossbeam_h/2 %> 0 0 0</pose>
      <collision name="collision">
        <geometry><box><size><%= col_dist %> <%= crossbeam_w %> <%= crossbeam_h %></size></box></geometry>
      </collision>
      <visual name="visual">
        <geometry><box><size><%= col_dist %> <%= crossbeam_w %> <%= crossbeam_h %></size></box></geometry>
        <material>
	  <script>
	    <name>Gazebo/Wood</name>
	  </script>
        </material>
      </visual>
    <inertial>
      <pose><%= x %> <%= y %> <%= post_h+crossbeam_h/2 %> 0 0 0</pose>
      <mass><%= crossbeam_m %></mass>
      <inertia>
        <ixx><%= crossbeam_m*(crossbeam_w*crossbeam_w+crossbeam_h*crossbeam_h)/12 %></ixx><ixy>0.0</ixy><ixz>0.0</ixz><iyy><%= crossbeam_m*(crossbeam_w*crossbeam_w+col_dist*col_dist)/12 %></iyy><iyz>0.0</iyz><izz><%= crossbeam_m*(col_dist*col_dist+crossbeam_h*crossbeam_h)/12 %></izz>
      </inertia>
    </inertial>
    </link>
		<% counter += 1
		end
    end %>
    
  </model>
</sdf>
